<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- annotation-driven : @Controller 어노테이션을 이용하여 Controller 클래스를 Spring
	Bean으로 등록하여 요청 처리 메소드를 작성해 요청 처리할 수 있도록 등록하는 어노테이션 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- InternalResourceViewResolver : 요청 처리 메소드에서 반환되는 ViewName를 전달받아
	응답 처리하기 위한 JSP 문서의 경로로 변환하여 제공하는 클래스 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- component-scan : Spring 어노테이션을 사용한 클래스가 작성된 패키지를 설정하는 엘리먼트 -->
	<!-- => 패키지에 작성된 클래스의 어노테이션을 Spring Container가 처리 -->
	<!-- <context:component-scan base-package="xyz.itwill.controller" /> -->
	<context:component-scan base-package="xyz.itwill10.controller" />
</beans:beans>










